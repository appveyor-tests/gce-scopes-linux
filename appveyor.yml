environment:
  APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUvrULRVnqephhFVqt2Gm+MRkLewIa7bfrrHTp1+Y6ulBlycVumHKsLMzeulCnxUP7+gVJ9cIQtbNBOt9oGEcSGBNGtmoDPsNOo6lA/9eVkQQR+WlgKYFK2LgtJY2FMpmkeD8BA06lz0arR6oQAac6Yjfn7HQq0XRkmJaFwrgc258JwSldbp9RNGDd7j6DzF1F3QsiLRFeHqZni6eNMnC3Xhmh0Jj4hDjYpeXWKuZjGPXAuVry0XTXPoLaUNfi0R9aDhtD8NszdzWKNwYt2iPKBVaSkMeDFkyLo3+CGLHKw//Uw8GIhtRQk4S6/Yfo7LS3leOJxJs7dryJiUS0IwT9 wasapl@appveyor.com
  APPVEYOR_SSH_BLOCK: true

init:
 - appveyor version
 - ps: Update-AppveyorBuild -Message "Image '$env:APPVEYOR_BUILD_WORKER_IMAGE'@'$env:APPVEYOR_BUILD_WORKER_CLOUD' cloud. $env:APPVEYOR_REPO_COMMIT_MESSAGE"
 - sh: echo $APPVEYOR_BUILD_WORKER_CLOUD
 - sh: echo $APPVEYOR_BUILD_WORKER_IMAGE
 - sh: |
     if [ $(uname -s) = "Darwin" ]; then
         IS_MAC=true
         echo "This is macos. GCE does not provide macos VMs. Therefore this test dont make sense. Aborting"
         appveyor exit
     else
         IS_MAC=false
     fi
 - sh: |
     if grep -Eq '/(lxc|docker)/[[:xdigit:]]{64}' /proc/1/cgroup; then
         IS_DOCKER=true
     else
         IS_DOCKER=false
     fi
 - sh: |
     if ! $IS_DOCKER  && ! $IS_MAC; then
       sudo apt-get -yqq install virt-what &&
       VIRT=$(sudo virt-what)
       if [[ "$VIRT" != "kvm" ]]; then
         echo "Virtualization is not KVM. GCE uses KVM only. Therefore this test dont make sense. Aborting"
         appveyor exit
       fi
     fi
     
test_script:
#- sh: SUB=ubuntu2204
#- sh: PY=$([[ "$APPVEYOR_BUILD_WORKER_IMAGE" =~ .*"$SUB".* ]] && echo "python3" || echo "python")
#- sh: echo $PY
- sh: |
    curl -sflL "http://metadata.google.internal/0.1/meta-data/service-accounts?recursive=true" \
         -H "Metadata-Flavor: Google" |
         python -c "import json; a=json.load(open(\"/dev/stdin\",\"r\")); print(json.dumps(a,indent=4,sort_keys=True))"
build: off
